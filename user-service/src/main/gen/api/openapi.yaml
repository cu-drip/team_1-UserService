openapi: 3.0.4
info:
  description: "API для управления пользователями, их профилями и спортивными рейт\
    ингами"
  title: UserService API
  version: 1.0.0
servers:
- description: Local Dev Server
  url: https://api.user.local
paths:
  /users:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Список пользователей
      summary: Получить список пользователей
      tags:
      - User Management
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Пользователь создан
      summary: Создать пользователя
      tags:
      - User Management
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}:
    get:
      parameters:
      - description: Идентификатор пользователя
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Пользователь найден
        "404":
          description: Пользователь не найден
      summary: Получить пользователя по ID
      tags:
      - User Management
      x-accepts:
      - application/json
    patch:
      parameters:
      - description: Идентификатор пользователя
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Профиль обновлён
      summary: Обновить профиль пользователя
      tags:
      - User Management
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/mmr:
    get:
      parameters:
      - description: Идентификатор пользователя
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSportMmr'
                type: array
          description: MMR по видам спорта
      summary: Получить MMR пользователя по видам спорта
      tags:
      - User MMR
      x-accepts:
      - application/json
  /users/{id}/avatar:
    patch:
      parameters:
      - description: Идентификатор пользователя
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_users__id__avatar_patch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Аватар обновлён
      summary: Обновить аватар пользователя
      tags:
      - User Management
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    UserId:
      description: Идентификатор пользователя
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
  schemas:
    User:
      example:
        hashed_password: hashed_password
        date_of_birth: 2000-01-23
        sex: male
        weight: 6.0274563
        created_at: 2000-01-23T04:56:07.000+00:00
        bio: bio
        is_admin: true
        patronymic: patronymic
        avatar_url: avatar_url
        surname: surname
        name: name
        phone_number: phone_number
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
        age: 0
        height: 1.4658129
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        surname:
          type: string
        patronymic:
          nullable: true
          type: string
        phone_number:
          type: string
        email:
          format: email
          nullable: true
          type: string
        hashed_password:
          type: string
        is_admin:
          type: boolean
        date_of_birth:
          format: date
          nullable: true
          type: string
        age:
          nullable: true
          type: integer
        sex:
          enum:
          - male
          - female
          - other
          nullable: true
          type: string
        weight:
          format: float
          nullable: true
          type: number
        height:
          format: float
          nullable: true
          type: number
        created_at:
          format: date-time
          type: string
        bio:
          nullable: true
          type: string
        avatar_url:
          nullable: true
          type: string
      type: object
    UserCreateRequest:
      example:
        hashed_password: hashed_password
        date_of_birth: 2000-01-23
        sex: male
        weight: 6.0274563
        bio: bio
        is_admin: true
        patronymic: patronymic
        avatar_url: avatar_url
        surname: surname
        name: name
        phone_number: phone_number
        email: email
        age: 0
        height: 1.4658129
      properties:
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
        phone_number:
          type: string
        email:
          type: string
        hashed_password:
          type: string
        is_admin:
          type: boolean
        date_of_birth:
          format: date
          type: string
        age:
          type: integer
        sex:
          enum:
          - male
          - female
          - other
          type: string
        weight:
          format: float
          type: number
        height:
          format: float
          type: number
        bio:
          type: string
        avatar_url:
          type: string
      required:
      - hashed_password
      - name
      - phone_number
      - surname
      type: object
    UserUpdateRequest:
      example:
        patronymic: patronymic
        avatar_url: avatar_url
        surname: surname
        date_of_birth: 2000-01-23
        sex: male
        name: name
        weight: 6.0274563
        bio: bio
        phone_number: phone_number
        email: email
        age: 0
        height: 1.4658129
      properties:
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
        phone_number:
          type: string
        email:
          type: string
        date_of_birth:
          format: date
          type: string
        age:
          type: integer
        sex:
          enum:
          - male
          - female
          - other
          type: string
        weight:
          format: float
          type: number
        height:
          format: float
          type: number
        bio:
          type: string
        avatar_url:
          type: string
      type: object
    UserSportMmr:
      example:
        mmr: 0.8008281904610115
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sport: football
      properties:
        user_id:
          format: uuid
          type: string
        sport:
          enum:
          - football
          - boxing
          - basketball
          - chess
          - tennis
          - jiu_jitsu
          type: string
        mmr:
          format: double
          type: number
      type: object
    ErrorResponse:
      properties:
        message:
          type: string
        code:
          type: integer
      type: object
    _users__id__avatar_patch_request:
      properties:
        avatar_url:
          type: string
      type: object

